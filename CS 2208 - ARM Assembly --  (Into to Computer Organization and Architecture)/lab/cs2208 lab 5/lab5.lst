


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             lab5, CODE, READONLY
    2 00000000                 ENTRY
    3 00000000         
    4 00000000 E28F006C 
                       main    ADR              r0,a        ;r0 is a pointer to
                                                             array a
    5 00000004 E28F109C        ADR              r1,endOfArray ;address at the e
                                                            nd of the array
    6 00000008 E0411000        SUB              r1,r1,r0    ;number of the arra
                                                            y bytes
    7 0000000C E1A01141        ASR              r1,#2       ;r1: length of the 
                                                            array,i.e., n
    8 00000010 E3A02000        MOV              r2,#0       ;r2: outer loop cou
                                                            nter,i.e., i
    9 00000014 E2414001        SUB              r4,r1,#1    ;r4 is (n - 1)
   10 00000018 E1520004 
                       startOuter
                               CMP              r2,r4       ;compare i with (n 
                                                            - 1)
   11 0000001C AA00000A        BGE              endOuter    ;if i >= (n - 1), t
                                                            hen exit the outer 
                                                            loop
   12 00000020 E3A03000        MOV              r3,#0       ;r3 is the inner lo
                                                            op counter, i.e., j
                                                            
   13 00000024 E0445002        SUB              r5,r4,r2    ;r5 is (n - 1 - i)
   14 00000028 E1530005 
                       startInner
                               CMP              r3,r5       ;compare j with (n 
                                                            - 1 - j)
   15 0000002C AA000004        BGE              endInner    ;if j >= (n - 1 -j)
                                                            , then exit the inn
                                                            er loop
   16 00000030 E0806103        ADD              r6,r0,r3,LSL#2 ;r6 is a pointer
                                                             to a[j]
   17 00000034 E2867004        ADD              r7,r6,#4    ;r7 is a pointer to
                                                             a[j+1]
   18 00000038         
   19 00000038         
   20 00000038 EB000004        BL               sortTwo     ;call sortTwo(*a[j]
                                                            ,*a[j+1])
   21 0000003C E2833001        ADD              r3,r3,#1    ;increment inner co
                                                            unter j
   22 00000040 EAFFFFF8        B                startInner  ;loop again (inner 
                                                            loop)
   23 00000044 E2822001 
                       endInner
                               ADD              r2,r2,#1    ;increment outer co
                                                            unter i
   24 00000048 EAFFFFF2        B                startOuter  ;loop again (outer 
                                                            loop)
   25 0000004C EAFFFFFE 
                       endOuter
                               B                endOuter
   26 00000050         
   27 00000050         ;------------------------------
   28 00000050         ;r6 is a pointer to a[j]
   29 00000050         ;r7 is a pointer to a[j+1]
   30 00000050         ;sortTwo(*a[j],*a[j+1])



ARM Macro Assembler    Page 2 


   31 00000050         ;a[j] is x. a[j+1] is y
   32 00000050         ; sortTwo STMEA sp!, {r6,r7}  ;save working registers
   33 00000050         ;  LDR r8,[r6] ;load contents from pointers
   34 00000050         ;  LDR r9,[r7]
   35 00000050         ;  CMP r8,r9    ;compare and see if *y < *x
   36 00000050         
   37 00000050         ;  STRGT r8,r6 ;if so swap *x and *y via temp variable
   38 00000050         ;  STRGT r9,r7
   39 00000050         
   40 00000050         ;return
   41 00000050         ;  LDR r12,[r13],#4;get saved PC and post-increment stac
                       k pointer
   42 00000050         ;  SUB r15,r12,#4 ;fix PC and load into r15 to return 
   43 00000050         ;------------------------------
   44 00000050         
   45 00000050         
   46 00000050 E8AD40DF 
                       sortTwo STMEA            sp!, {R0-R4, R6, R7, LR} ;Store
                                                             registers to stack
                                                             pointer
   47 00000054 E51D0004        LDR              R0, [sp, #-4]
   48 00000058 E5901000        LDR              R1, [R0]
   49 0000005C E51D2008        LDR              R2, [sp, #-8]
   50 00000060 E5923000        LDR              r3, [r2]
   51 00000064 41A04003        MOVMI            R4, R3
   52 00000068 45821000        STRMI            R1, [R2]
   53 0000006C 45804000        STRMI            R4, [R0]
   54 00000070 E93D80DF        LDMEA            sp!, {R0-R4, R6, R7, PC} ;Resto
                                                            re the working regi
                                                            sters 
   55 00000074         
   56 00000074         
   57 00000074         
   58 00000074         
   59 00000074         
   60 00000074 0000002C 
              FFFFFFC8 
              00000003 
              00000041 
              FFFFFFF8 
              00000020 
              00000006 
              FFFFFFA9 
              00000036 
              00000041 
              00000057 
              00000020 
              00000041 a       DCD              44,-56,3,65,-8,32,6,-87,54,65,8
7,32,65
   61 000000A8 00      endOfArray
                               SPACE            1
   62 000000A9         
   63 000000A9                 END
Command Line: --debug --xref --bi --apcs=interwork --depend=.\lab5.d -o.\lab5.o
 -I"C:\Program Files (x86)\ARM simulator\ARM\RV31\INC" -I"C:\Program Files (x86
)\ARM simulator\ARM\CMSIS\Include" --predefine="__EVAL SETA 1" --list=.\lab5.ls
t lab5.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

a 00000074

Symbol: a
   Definitions
      At line 60 in file lab5.s
   Uses
      At line 4 in file lab5.s
Comment: a used once
endInner 00000044

Symbol: endInner
   Definitions
      At line 23 in file lab5.s
   Uses
      At line 15 in file lab5.s
Comment: endInner used once
endOfArray 000000A8

Symbol: endOfArray
   Definitions
      At line 61 in file lab5.s
   Uses
      At line 5 in file lab5.s
Comment: endOfArray used once
endOuter 0000004C

Symbol: endOuter
   Definitions
      At line 25 in file lab5.s
   Uses
      At line 11 in file lab5.s
      At line 25 in file lab5.s

lab5 00000000

Symbol: lab5
   Definitions
      At line 1 in file lab5.s
   Uses
      None
Comment: lab5 unused
main 00000000

Symbol: main
   Definitions
      At line 4 in file lab5.s
   Uses
      None
Comment: main unused
sortTwo 00000050

Symbol: sortTwo
   Definitions
      At line 46 in file lab5.s
   Uses
      At line 20 in file lab5.s
Comment: sortTwo used once
startInner 00000028




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: startInner
   Definitions
      At line 14 in file lab5.s
   Uses
      At line 22 in file lab5.s
Comment: startInner used once
startOuter 00000018

Symbol: startOuter
   Definitions
      At line 10 in file lab5.s
   Uses
      At line 24 in file lab5.s
Comment: startOuter used once
9 symbols
340 symbols in table
