


ARM Macro Assembler    Page 1 


    1 00000000         ;Vivian Lam
    2 00000000         ;program that calls a subroutine to perform a calculatio
                       n, clips the result if it's > d, and then return and dou
                       ble that return value and store in r1  
    3 00000000         
    4 00000000                 AREA             prog3, CODE, READONLY
    5 00000000                 ENTRY
    6 00000000         ;---------------------------------------------------
    7 00000000         Main
    8 00000000 E3A00003        MOV              r0, #3      ;store a value in r
                                                            0
    9 00000004         ;MOV r2, #1  ;test value to see if register is restored 
                       after funciton call
   10 00000004 E28FD054        ADR              SP, Stackk  ;initialize pointer
                                                             to stack
   11 00000008 EB000001        BL               Function1   ;jump to the functi
                                                            on
   12 0000000C         
   13 0000000C E0801000        ADD              r1, r0, r0  ;double the new val
                                                            ue of r0 and store 
                                                            it into r1
   14 00000010         
   15 00000010 EAFFFFFE 
                       loop    B                loop        ;infinite loop so n
                                                            o error
   16 00000014         
   17 00000014         ;---------------------------------------------------
   18 00000014         ;performs the calculation: y = a × x^2 + b × x + c 
   19 00000014         ;where x is r0. the return value is stored in r0
   20 00000014         ;use r2-r5 to store a,b,c,d (respectively)
   21 00000014         ;use r6 to store x^2
   22 00000014         ;use r8 to store b × x
   23 00000014         ;use r7 to store current output value
   24 00000014 E8AD01FC 
                       Function1
                               STMIA            SP!, {r2-r8} ;store working reg
                                                            isters and link reg
                                                            ister
   25 00000018         
   26 00000018 E59F2030        LDR              r2, memA    ;load values a,b,c,
                                                            d into registers r2
                                                            -r5 (make r2 point 
                                                            to memA etc.)
   27 0000001C E59F3030        LDR              r3, memB
   28 00000020 E59F4030        LDR              r4, memC
   29 00000024 E59F5030        LDR              r5, memD
   30 00000028         
   31 00000028         ;perform calculation: y = a × x^2 + b × x + c 
   32 00000028 E0060090        MUL              r6, r0, r0  ;y=x^2
   33 0000002C E0070296        MUL              r7, r6, r2  ;y=a × y
   34 00000030 E0080093        MUL              r8, r3, r0  ;b × x
   35 00000034 E0877008        ADD              r7, r7, r8  ;y = y+ b × x
   36 00000038 E0877004        ADD              r7, r7, r4  ;y=y+c
   37 0000003C         
   38 0000003C E1A00007        MOV              r0, r7      ;store the output v
                                                            alue to r0
   39 00000040 E1500005        CMP              r0, r5      ;check to see if th
                                                            e result is > value
                                                             of d



ARM Macro Assembler    Page 2 


   40 00000044 C1A00005        MOVGT            r0, r5      ;if so then the out
                                                            put value will be c
                                                            lipped to d and is 
                                                            stored in r0
   41 00000048         ;otherwise the output value is not clipped and is stored
                        in r0
   42 00000048         
   43 00000048 E93D01FC        LDMDB            SP!, {r2-r8} ;restore the worki
                                                            ng registers back t
                                                            o normal
   44 0000004C E1A0F00E        MOV              PC,LR       ;return from functi
                                                            on 1 by making the 
                                                            value of PC equal t
                                                            o the link register
                                                            
   45 00000050         ;---------------------------------------------------  
   46 00000050         
   47 00000050 00000005 
                       memA    DCD              5           ;values for a, b, c
                                                            , d, which are used
                                                             in the function an
                                                            d for clipping
   48 00000054 00000006 
                       memB    DCD              6
   49 00000058 00000007 
                       memC    DCD              7
   50 0000005C 0000000A 
                       memD    DCD              10
   51 00000060 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 3 


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 Stackk  space            0xFF
   52 0000015F 00              ALIGN
   53 00000160                 END
Command Line: --debug --xref --bi --apcs=interwork --depend=.\prog3.d -o.\prog3
.o -I"C:\Program Files (x86)\ARM simulator\ARM\RV31\INC" -I"C:\Program Files (x
86)\ARM simulator\ARM\CMSIS\Include" --predefine="__EVAL SETA 1" --list=.\prog3



ARM Macro Assembler    Page 4 


.lst prog3.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Function1 00000014

Symbol: Function1
   Definitions
      At line 24 in file prog3.s
   Uses
      At line 11 in file prog3.s
Comment: Function1 used once
Main 00000000

Symbol: Main
   Definitions
      At line 7 in file prog3.s
   Uses
      None
Comment: Main unused
Stackk 00000060

Symbol: Stackk
   Definitions
      At line 51 in file prog3.s
   Uses
      At line 10 in file prog3.s
Comment: Stackk used once
loop 00000010

Symbol: loop
   Definitions
      At line 15 in file prog3.s
   Uses
      At line 15 in file prog3.s
Comment: loop used once
memA 00000050

Symbol: memA
   Definitions
      At line 47 in file prog3.s
   Uses
      At line 26 in file prog3.s
Comment: memA used once
memB 00000054

Symbol: memB
   Definitions
      At line 48 in file prog3.s
   Uses
      At line 27 in file prog3.s
Comment: memB used once
memC 00000058

Symbol: memC
   Definitions
      At line 49 in file prog3.s
   Uses
      At line 28 in file prog3.s
Comment: memC used once
memD 0000005C

Symbol: memD



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 50 in file prog3.s
   Uses
      At line 29 in file prog3.s
Comment: memD used once
prog3 00000000

Symbol: prog3
   Definitions
      At line 4 in file prog3.s
   Uses
      None
Comment: prog3 unused
9 symbols
340 symbols in table
