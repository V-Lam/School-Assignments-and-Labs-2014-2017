


ARM Macro Assembler    Page 1 


    1 00000000         ;Vivian Lam
    2 00000000         ;program to copy a string into another string, but remov
                       e any instance of the word "the"
    3 00000000                 AREA             prog2, CODE, READONLY
    4 00000000                 ENTRY
    5 00000000         
    6 00000000         ;define contants 
    7 00000000 00000020 
                       spacechara
                               EQU              0x20        ;space character co
                                                            nstant used to chec
                                                            k if current charac
                                                            ter is a space
    8 00000000 00000074 
                       charat  EQU              0x74        ;'t' character cons
                                                            tant used to check 
                                                            if current characte
                                                            r is t
    9 00000000 00000000 
                       null    EQU              0x00        ;null character con
                                                            stant used to deter
                                                            mine if end of stri
                                                            ng  
   10 00000000         
   11 00000000         ;set up the strings
   12 00000000 E28F0064        ADR              r0, STRING1 ;load address of st
                                                            ring1 into register
                                                             0
   13 00000004 E28F1081        ADR              r1, STRING2 ;load address of st
                                                            ring2 into register
                                                             1
   14 00000008 E59F217C        LDR              r2, =0x74686520 ;load the strin
                                                            g "the " into r2. T
                                                            his will be used fo
                                                            r comparing to chec
                                                            k if the instance o
                                                            f it occurs
   15 0000000C E59F317C        LDR              r3, =0x74686500 ;load the strin
                                                            g "the/0" into r3. 
                                                            This will be used f
                                                            or comparing to che
                                                            ck if the instance 
                                                            of it occurs
   16 00000010         ;r4 will be used to load the next byte in string1
   17 00000010         ;r5 will be used to build the substring
   18 00000010         ;r6 stores the original position of pointer1 before oomp
                       aring
   19 00000010         
   20 00000010         
   21 00000010         ;since we want to remove the word "the" we must consider
                        diff scenarios:
   22 00000010         ;case1: "the" is at the beginning of the string (no spac
                       e before t)
   23 00000010         ;case2: " the " is in the middle of the string (space be
                       fore and after the word "the")
   24 00000010         ;case3: "the/0" is at the end of the string (space befor
                       e "the" and null character after)
   25 00000010         
   26 00000010         



ARM Macro Assembler    Page 2 


   27 00000010         ;first check case1: if "the" is at begnning of string
   28 00000010 E5D04000        LDRB             r4, [r0]    ;load first charact
                                                            er from strin1
   29 00000014 E3540074        CMP              r4,#charat  ;if the character i
                                                            s a 't' branch to c
                                                            heck if the first w
                                                            ord is actually "th
                                                            e " or "the/0"
   30 00000018 0A000005        BEQ              check
   31 0000001C         
   32 0000001C         
   33 0000001C         
   34 0000001C         ;loop to go through the string
   35 0000001C E4D04001 
                       loop    LDRB             r4, [r0], #1 ;load character fr
                                                            om string1 and post
                                                            -increment pointer
   36 00000020 E4C14001        STRB             r4, [r1], #1 ;Store the charact
                                                            er and post-increme
                                                            nt pointer
   37 00000024         
   38 00000024 E3540000        CMP              r4, #null   ;check to see if cu
                                                            rrent char is null
   39 00000028 0A00000E        BEQ              endless     ;if so then branch 
                                                            to end of program, 
                                                            we are dont copying
                                                            
   40 0000002C         
   41 0000002C E3540020        CMP              r4, #spacechara ;check to see i
                                                            f current char is a
                                                             space
   42 00000030 1AFFFFF9        BNE              loop        ;if so then we migh
                                                            t have case 2 or 3 
                                                            (" the " or " the/0
                                                            "), in which we wou
                                                            ld continue through
                                                             the code.
   43 00000034         ;otherwise go back to beginning of loop to get next char
                       acter
   44 00000034         
   45 00000034         
   46 00000034         ;now to check if we have case 2 or 3:
   47 00000034 E1A06000 
                       check   MOV              r6, r0      ;store current posi
                                                            tion of strin1 poin
                                                            ter (if we don't ge
                                                            t an instance of th
                                                            e word "the",
   48 00000038         ; the value of the pointer will be reverted back to this
                        stored value)
   49 00000038 E3A05000        MOV              r5, #0      ;Reset r5 because t
                                                            his serves as a poi
                                                            nter for the next 4
                                                             characters (for ch
                                                            ecking substring) i
                                                            n string1
   50 0000003C         
   51 0000003C         ;building substring to check if instance of "the" follow
                       s after the space



ARM Macro Assembler    Page 3 


   52 0000003C E4D04001 
                       substr  LDRB             r4, [r0], #1 ;load character in
                                                            to temp substring
   53 00000040 E3540000        CMP              r4, #null   ;check if current c
                                                            har is Eos chara
   54 00000044         ;If so then we have case 3, thus when we do the next che
                       ck we will be comparing "the/0"
   55 00000044 01A02003        MOVEQ            r2, r3      ;and so we must cha
                                                            nge the value of r2
                                                             to be "the/0", ins
                                                            tead of " the "
   56 00000048         
   57 00000048 E0855004        ADD              r5, r4      ;Append the charact
                                                            er(r4) to the subst
                                                            ring (r5)
   58 0000004C E3550201        CMP              r5, #0x10000000 ;Check if the s
                                                            ubstring contains l
                                                            ess than 4 characte
                                                            rs
   59 00000050 B1A05405        LSLLT            r5, #8      ;If yes then shift 
                                                            the substring 1 byt
                                                            e left
   60 00000054 BAFFFFF8        BLT              substr      ;continue building 
                                                            the substring (else
                                                            , the substring is 
                                                            built)
   61 00000058         
   62 00000058         ;check if substring follows case 2 or 3 ("the " or "the/
                       0")
   63 00000058 E1550002        CMP              r5, r2      ;checking case 2
   64 0000005C 02400001        SUBEQ            r0, #1      ;if so then decreme
                                                            nt string1 pointer 
                                                            by 1
   65 00000060 11A00006        MOVNE            r0, r6      ;otherwise revert p
                                                            ointer to position 
                                                            before the check
   66 00000064         ; CMP r5, r3  ;checking case 3
   67 00000064         ; SUBEQ r0, #1 ;if so then decrement string1 pointer by 
                       1
   68 00000064         ; MOVNE r0, r6 ;otherwise revert pointer to position bef
                       ore the check
   69 00000064         
   70 00000064         
   71 00000064 EAFFFFEC        B                loop        ;repeat loop. loop 
                                                            will exit when abov
                                                            e condition (null c
                                                            haracter reached) i
                                                            s fulfilled
   72 00000068         
   73 00000068 EAFFFFFE 
                       endless B                endless     ;Infinite loop so n
                                                            o error
   74 0000006C         
   75 0000006C 74 68 65 
              20 74 68 
              65 79 20 
              54 68 65 
              20 20 74 
              68 65 20 



ARM Macro Assembler    Page 4 


              31 32 33 
              20 61 74 
              68 65 20 
              20 20 74 
              68 65    STRING1 DCB              "the they The  the 123 athe   t
he" 
                                                            ;String1
   76 0000008C         ;STRING1 DCB "" ;String1
   77 0000008C         ;STRING1 DCB "the" ;String1
   78 0000008C         ;STRING1 DCB "The" ;String1
   79 0000008C         ;STRING1 DCB "them   the   the1" ;String1
   80 0000008C         ;STRING1 DCB "and the man said they must go" ;String1
   81 0000008C 00      EoS     DCB              0x00        ;end of string1
   82 0000008D 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 5 


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 STRING2 space            0xFF
   83 0000018C         
   84 0000018C                 ALIGN
   85 0000018C                 END
              74686520 
              74686500 
Command Line: --debug --xref --bi --apcs=interwork --depend=.\prog2.d -o.\prog2
.o -I"C:\Program Files (x86)\ARM simulator\ARM\RV31\INC" -I"C:\Program Files (x
86)\ARM simulator\ARM\CMSIS\Include" --predefine="__EVAL SETA 1" --list=.\prog2
.lst prog2.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

EoS 0000008C

Symbol: EoS
   Definitions
      At line 81 in file prog2.s
   Uses
      None
Comment: EoS unused
STRING1 0000006C

Symbol: STRING1
   Definitions
      At line 75 in file prog2.s
   Uses
      At line 12 in file prog2.s
Comment: STRING1 used once
STRING2 0000008D

Symbol: STRING2
   Definitions
      At line 82 in file prog2.s
   Uses
      At line 13 in file prog2.s
Comment: STRING2 used once
check 00000034

Symbol: check
   Definitions
      At line 47 in file prog2.s
   Uses
      At line 30 in file prog2.s
Comment: check used once
endless 00000068

Symbol: endless
   Definitions
      At line 73 in file prog2.s
   Uses
      At line 39 in file prog2.s
      At line 73 in file prog2.s

loop 0000001C

Symbol: loop
   Definitions
      At line 35 in file prog2.s
   Uses
      At line 42 in file prog2.s
      At line 71 in file prog2.s

prog2 00000000

Symbol: prog2
   Definitions
      At line 3 in file prog2.s
   Uses
      None
Comment: prog2 unused
substr 0000003C



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols


Symbol: substr
   Definitions
      At line 52 in file prog2.s
   Uses
      At line 60 in file prog2.s
Comment: substr used once
8 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

charat 00000074

Symbol: charat
   Definitions
      At line 8 in file prog2.s
   Uses
      At line 29 in file prog2.s
Comment: charat used once
null 00000000

Symbol: null
   Definitions
      At line 9 in file prog2.s
   Uses
      At line 38 in file prog2.s
      At line 53 in file prog2.s

spacechara 00000020

Symbol: spacechara
   Definitions
      At line 7 in file prog2.s
   Uses
      At line 41 in file prog2.s
Comment: spacechara used once
3 symbols
344 symbols in table
