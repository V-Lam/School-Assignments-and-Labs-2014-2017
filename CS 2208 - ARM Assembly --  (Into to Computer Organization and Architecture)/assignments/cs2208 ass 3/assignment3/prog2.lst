


ARM Macro Assembler    Page 1 


    1 00000000         ;Vivian Lam
    2 00000000         ;program to check if string is a palindrome or not
    3 00000000         ;ignores case and special characters
    4 00000000         
    5 00000000                 AREA             prog2, CODE, READONLY
    6 00000000                 ENTRY
    7 00000000         
    8 00000000         ;r0 is a pointer that points to the string
    9 00000000         ;r1 is a pointer to point the the current character in t
                       he string
   10 00000000         ;r2 is another character to point to the current charact
                       er in the string from the other end
   11 00000000         ;r3 is the current character that r1 points to
   12 00000000         ;r4 is the current character that r2 points to
   13 00000000         ;r5 points to end of string
   14 00000000         ;toLower is a constant
   15 00000000         
   16 00000000         
   17 00000000         
   18 00000000 E59F00A4        LDR              r0,=STRING  ;make r0 to point t
                                                            o the string
   19 00000004 E59F50A4        LDR              r5,=EoS     ;make r5 to point t
                                                            o EoS (end of strin
                                                            g, so we can check 
                                                            if we reach the end
                                                            )
   20 00000008 E3E01000        MOV              r1,#-1      ;make pointer in r1
                                                             to -1 (incremented
                                                             later to 0)
   21 0000000C         
   22 0000000C 00000020 
                       convLow EQU              32          ;Add 32 to convert 
                                                            uppercase to lowerc
                                                            ase letters in ASCI
                                                            I
   23 0000000C         
   24 0000000C         
   25 0000000C         LEN                                  ;LOOP
   26 0000000C E7D03002        LDRB             r3,[r0,r2]  ;Load a byte of the
                                                             string (character 
                                                            at position pointed
                                                             at by r2)
   27 00000010 E1530005        CMP              r3,r5       ;Check if the chara
                                                            cter is the null ch
                                                            aracter (end of str
                                                            ing)
   28 00000014 0A000001        BEQ              Check       ;If so, stop length
                                                             count and exit loo
                                                            p
   29 00000018 E2822001        ADD              r2,#1       ;Else, increment po
                                                            inter to point to n
                                                            ext character
   30 0000001C EAFFFFFA        B                LEN         ;UNTIL end of strin
                                                            g is reached & r2 p
                                                            oints at EoS
   31 00000020         
   32 00000020         
   33 00000020         Check                                ;Pointers of r1 and
                                                             r2 are located at 



ARM Macro Assembler    Page 2 


                                                            opposite ends of th
                                                            e string
   34 00000020 E1510002        CMP              r1,r2       ;Check if pointers 
                                                            have crossed paths 
                                                            yet
   35 00000024 CA000017        BGT              CheckPal    ;If so, string is a
                                                             palindrome as lett
                                                            er pairs have all m
                                                            atched
   36 00000028 E2811001        ADD              r1,#1       ;Increment pointer 
                                                            at the start of the
                                                             string
   37 0000002C E2422001        SUB              r2,#1       ;Decrement pointer 
                                                            at the end of the s
                                                            tring
   38 00000030         
   39 00000030         
   40 00000030         Char1                                ;LOOP
   41 00000030 E7D03001        LDRB             r3,[r0,r1]  ;Get character 1 at
                                                             position pointed a
                                                            t by r1
   42 00000034 E3530041        CMP              r3,#'A'     ;Check if character
                                                             1 is possibly not 
                                                            a letter
   43 00000038 B2811001        ADDLT            r1,#1       ;If possibly not a 
                                                            letter,  increment 
                                                            this pointer
   44 0000003C BAFFFFFB        BLT              Char1       ;Get next character
                                                            
   45 00000040         
   46 00000040 E353007A        CMP              r3,#'z'     ;Check if character
                                                             is greater than 'z
                                                            '
   47 00000044 C2811001        ADDGT            r1,#1       ;If so, character i
                                                            s not a letter so i
                                                            ncrement pointer an
                                                            d get next characte
                                                            r
   48 00000048 CAFFFFF8        BGT              Char1       ;UNTIL character is
                                                             a letter
   49 0000004C         
   50 0000004C E3530061        CMP              r3,#'a'     ;Check if character
                                                             1 is uppercase
   51 00000050 B2833020        ADDLT            r3,#convLow ;If so, add 32 to c
                                                            onvert character to
                                                             lowercase equivale
                                                            nt
   52 00000054         
   53 00000054         Char2                                ;LOOP
   54 00000054 E7D04002        LDRB             r4,[r0,r2]  ;Get character 2 at
                                                             position pointed a
                                                            t by r2
   55 00000058 E3540041        CMP              r4,#'A'     ;Check if character
                                                             2 is possibly not 
                                                            a letter
   56 0000005C B2422001        SUBLT            r2,#1       ;If possibly not a 
                                                            letter, decrement t
                                                            his pointer
   57 00000060 BAFFFFFB        BLT              Char2       ;Get next character



ARM Macro Assembler    Page 3 


                                                            
   58 00000064         
   59 00000064 E354007A        CMP              r4, #'z'    ;Check if character
                                                             2 is greater than 
                                                            'z'
   60 00000068 C2422001        SUBGT            r2,#1       ;If so, character i
                                                            s not a letter so d
                                                            ecrement pointer an
                                                            d get next characte
                                                            r
   61 0000006C CAFFFFF8        BGT              Char2       ;UNTIL character is
                                                             a letter
   62 00000070         
   63 00000070 E3540061        CMP              r4,#'a'     ;Check if character
                                                             2 is uppercase
   64 00000074 B2844020        ADDLT            r4,#convLow ;If so, add 32 to c
                                                            onvert character to
                                                             lowercase equivale
                                                            nt Now r3 and r4 co
                                                            ntain two lowercase
                                                             letters
   65 00000078         
   66 00000078 E1530004        CMP              r3,r4       ;Compare character 
                                                            1 and character 2
   67 0000007C 0AFFFFE7        BEQ              Check       ;If equal, the stri
                                                            ng is possibly a pa
                                                            lindrome. Continue 
                                                            comparing character
                                                             pairs. If they are
                                                             not equal, the str
                                                            ing is not a palind
                                                            rome
   68 00000080 E3A00000        MOV              r0,#0       ;Set r0 to 0 to ind
                                                            icating that the st
                                                            ring is not a palin
                                                            drome
   69 00000084         
   70 00000084         
   71 00000084 EA000000        B                Loop        ;Skip to end
   72 00000088         
   73 00000088         
   74 00000088 E3A00001 
                       CheckPal
                               MOV              r0,#1       ;Set r0 to 1 indica
                                                            ting that the strin
                                                            g is a palindrome
   75 0000008C         
   76 0000008C         
   77 0000008C EAFFFFFE 
                       Loop    B                Loop        ;End program with i
                                                            nfinite loop to pre
                                                            vent error
   78 00000090         
   79 00000090 48 65 20 
              6C 69 76 
              65 64 20 
              61 73 20 
              61 20 64 
              65 76 69 



ARM Macro Assembler    Page 4 


              6C 2C 20 
              65 68 3F STRING  DCB              "He lived as a devil, eh?" 
                                                            ;string test value
   80 000000A8         ;STRING DCB "asdfg";string test value
   81 000000A8 00      EoS     DCB              0x00        ;End of string ASCI
                                                            I value
   82 000000A9         
   83 000000A9                 END
              00 00 00 
              00000000 
              00000000 
Command Line: --debug --xref --bi --apcs=interwork --depend=.\prog2.d -o.\prog2
.o -I"C:\Program Files (x86)\ARM simulator\ARM\RV31\INC" -I"C:\Program Files (x
86)\ARM simulator\ARM\CMSIS\Include" --predefine="__EVAL SETA 1" --list=.\prog2
.lst prog2.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Char1 00000030

Symbol: Char1
   Definitions
      At line 40 in file prog2.s
   Uses
      At line 44 in file prog2.s
      At line 48 in file prog2.s

Char2 00000054

Symbol: Char2
   Definitions
      At line 53 in file prog2.s
   Uses
      At line 57 in file prog2.s
      At line 61 in file prog2.s

Check 00000020

Symbol: Check
   Definitions
      At line 33 in file prog2.s
   Uses
      At line 28 in file prog2.s
      At line 67 in file prog2.s

CheckPal 00000088

Symbol: CheckPal
   Definitions
      At line 74 in file prog2.s
   Uses
      At line 35 in file prog2.s
Comment: CheckPal used once
EoS 000000A8

Symbol: EoS
   Definitions
      At line 81 in file prog2.s
   Uses
      At line 19 in file prog2.s
Comment: EoS used once
LEN 0000000C

Symbol: LEN
   Definitions
      At line 25 in file prog2.s
   Uses
      At line 30 in file prog2.s
Comment: LEN used once
Loop 0000008C

Symbol: Loop
   Definitions
      At line 77 in file prog2.s
   Uses
      At line 71 in file prog2.s
      At line 77 in file prog2.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols


STRING 00000090

Symbol: STRING
   Definitions
      At line 79 in file prog2.s
   Uses
      At line 18 in file prog2.s
Comment: STRING used once
prog2 00000000

Symbol: prog2
   Definitions
      At line 5 in file prog2.s
   Uses
      None
Comment: prog2 unused
9 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

convLow 00000020

Symbol: convLow
   Definitions
      At line 22 in file prog2.s
   Uses
      At line 51 in file prog2.s
      At line 64 in file prog2.s

1 symbol
343 symbols in table
